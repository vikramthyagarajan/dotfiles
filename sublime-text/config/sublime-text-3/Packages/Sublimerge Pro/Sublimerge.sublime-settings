/*
 NOTE: PLEASE DO NOT EDIT THIS FILE TO PREVENT YOUR CUSTOM SETTINGS FROM BEING OVERRIDDEN EACH TIME SUBLIMERGE
 IS UPGRADED. TO MAKE CHANGES PLEASE COPY THE ENTRIES YOU WANT TO MODIFY TO `Settings - User` FILE AND EDIT THERE.
*/

{
    //GENERAL /////////////////////////////////////////////////////////////////////////////////////////

    //Turn on/off debugging logs (console)
    "debug": false,

    //Fallback encoding to encode shell commands. If you get an error message while running VCS commands,
    //you should change it to the one compatible with your system's locale. For full list of encodings please
    //visit http://docs.python.org/2/library/codecs.html#standard-encodings
    "shell_fallback_encoding": "ascii",

    //Other plugins to be paused in diff view. Set "pause_plugins": "*" to pause all
    "pause_plugins": ["GitGutterEvents", "VcsGutterEvents", "JshintListener", "HlChangesBackground"],

    //This will limit the list of comparable files to the files with the same syntax
    "same_syntax_only": true,

    //This will order the list of comparable files by file's names similiarity
    "intelligent_files_sort": true,

    //This will display compact list of comparable files
    "compact_files_list": true,

    //This will display custom comparisons list in a separate menu. You will need to select
    //"Custom Comparison..." option after pressing ctrl+alt+d
    "custom_comparisons_in_separate_menu": false,

    //THREE-WAY DIFF //////////////////////////////////////////////////////////////////////////////////

    //Layout of the three-way diff view:
    //  0 -> [ Theirs | Merged | Mine ]

    //  1 -> [ Theirs | Mine ]
    //       [    Merged     ]
    "three_way_layout": 0,

    //Percentage height for [ Merged ] pane. Applicable only when `three_way_layout` = 1
    "three_way_merged_height": 40,

    //By default, in three-way diff view, navigation is limited to conflicts only. When set to true, you
    //can navigate through all changes. You can change this setting via context menu too.
    "three_way_navigate_all": false,


    //THREE WAY DIFF ALGORITHM

    //A group of options to configure how to automatically resolve some conflicts. Such conflicts will
    //be marked as regular conflicts, but their gutter icon will be changed from '!' to '?'. Additionally
    //their state will be automatically set to 'resolved' and pre-merged output will contain a text from
    //the best-matching change (according to these settings).
    "three_way_auto_resolve": {
        //A change that contains a text will be used when opposite contains only white-spaces: CR/LF,
        //spaces or tabs.
        "white_space_vs_non_white_space": false
    },

    //DIFF ALGORITHM //////////////////////////////////////////////////////////////////////////////////

    //Set to true if you want to ignore whitespace differences
    "ignore_whitespace": false,

    //Set to true if you want to ignore differences in new line characters (CR/LF)
    "ignore_crlf": true,

    //Set to true if you want diff to be case insensitive
    "ignore_case": false,

    //Determines whether to perform intraline change analysis within each of the changed blocks.
    //It is only used to mark interline changes and does not affect general difference analysis.
    //When you work with big files and get performance problems, you can switch this off.
    "intraline_analysis": true,

    //Ratio, calculated as: (length of changed parts / length of unchanged parts) * 100. When ratio
    //gets greater than this value intraline changes are not displayed and line is considered as
    //fully replaced rather than modified.
    "intraline_changes_threshold": 60,

    //This setting makes small spans of text, with the length lower or equal this value, to be marked
    //as part of intraline change if they appear between two intraline changes. This setting eliminates
    //noisy highlights within the line.
    "intraline_combine_threshold": 3,

    //Set this to `true` if you want intraline changes to be found using full-text search instead of
    //simple comparison of adjacent lines. This may be useful when lines are moved. For optimal results,
    //please remember about `intraline_changes_threshold` setting.
    "intraline_analysis_full_text": false,

    //Produces more difference blocks in such a way that all grayed (missing) lines blocks are
    //separated from changed blocks.
    //This gives you more possible ways to merge changes, but requires you to be more careful.
    //Sometimes you will need to correct something "by hand".
    "separate_missing_blocks": false,


    //VIEWS ///////////////////////////////////////////////////////////////////////////////////////////

    //Diff view consists of two Sublime's views. All options defined here will be applied to them.
    //The list of possible options can be found via Preferences -> Settings - Default
    "view": {
        //set to true if you want to display line numbers (they may not be corresponding
        //with original file lines due to expanded diff regions)
        "line_numbers": false,

        //set to true if you want lines to wrap on words (this is not recommended due to
        //readability reasons)
        "word_wrap": false,

        //set to true if you want to have extended scroll area
        "scroll_past_end": false,

        //set to false if you don't want to highlight corresponding lines
        "highlight_line": true,

        //set to 'all' to display white space characters always, 'selection' to display
        //only when selection is applied
        "draw_white_space": "all",

        //disable save on focus functionality in diff view
        "save_on_focus_lost": false,

        //don't translate tabs to spaces in diff view
        "translate_tabs_to_spaces": false
    },

    //Defines if summary panel should be displayed. This panel shows differences between
    //adjacent lines or currently selected blocks.
    "summary_panel": true,

    //Some Sublime themes makes the panel to blend with the diff views. If this is uncomfortable
    //to read, you can fix it by changing the following setting to point to a valid tmTheme file.
    //The idea behind this is to separate the panel visually by changing its background color.
    //
    //Example: "summary_panel_color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme"
    "summary_panel_color_scheme": null,

    //Starts diff view in swapped mode where new changes are displayed on the left-hand side panel.
    "start_swapped": false,

    //Defines how often panels in diff window are synced (milliseconds). Minimum value is 1.
    //Although "1" is proved to be safe value, you should change it when Sublime Text reaches
    //high CPU usage or crashes when diff window is open.
    "scroll_sync_interval": 1,

    //Set to true if you want diff window to be opened in full screen mode
    "full_screen": false,

    //Depending on default state, shows/hides Menu in diff window (Windows-only)
    //If you don't use Menu normally, you should switch this to `false` - otherwise Menu will
    //be shown in diff window.
    "toggle_menu": true,

    //Depending on default state, shows/hides Side Bar in diff window.
    //If you don't use Side Bar normally, you should switch this to `false` - otherwise Side Bar will
    //be shown in diff window.
    "toggle_side_bar": true,

    //Depending on default state, shows/hides Minimap in diff window
    //If you don't use Minimap normally, you should switch this to `false` - otherwise Minimap will
    //be shown in diff window.
    "toggle_minimap": false,

    //Set to true if you want the first diff region to be automatically selected
    "auto_select_first": false,

    //Set to false if you don't want to automatically "jump" to the next change after merge
    "go_to_next_after_merge": true,


    //DIFF BLOCK COLORS ///////////////////////////////////////////////////////////////////////////////

    //Values for these properties are defined in your color scheme. They are set to work properly with
    //the Monokai scheme, which is Sublime's default. You can change them to any you want. The list of
    //available values can be found in your current scheme file (.tmTheme).

    //If false, diff blocks will be filled rather than outlined. It may cause intraline changes not to
    //be visible even if you define another color for them. This is Sublime Text's drawing issue: when
    //it draws two (or more) filled regions one in another, some of them are randomly not drawn.
    "diff_block_draw_outlined": true,

    //color when content of difference exists in both files
    "diff_block_changed": "markup.changed",

    //color when content of difference exists in left file, but does not exist in right one
    "diff_block_inserted": "markup.inserted",

    //color when content of difference exists in right file, but does not exist in left one
    "diff_block_deleted": "markup.deleted",

    //color when changes are conflicting with each other
    "diff_block_conflict": "invalid.deprecated",

    //fill color for intraline changes marks. If diff_block_draw_outlined is false, consider setting
    //this value to other color than for diff_block_changed. Otherwise intraline changes will not be
    //visible.
    "diff_block_intraline": "markup.changed",

    //fill color for selected difference
    "diff_block_selected": "selection",

    //defines how to draw the selected blocks. When set to false, selected blocks are drawn outlined
    //instead of filled. Applicable only when `diff_block_draw_outlined` is `true`.
    "diff_block_selected_draw_filled": true,

    //fill color for missing lines block
    "diff_block_missing": "comment",


    //SNAPSHOTS ///////////////////////////////////////////////////////////////////////////////////////

    //Whether to automatically create snapshot when file is opened
    "snapshots_on_open": true,

    //Whether to automatically create snapshot each time file is saved
    "snapshots_on_save": false,


    //VERSION CONTROL SYSTEMS SUPPORT /////////////////////////////////////////////////////////////////

    "vcs_support": true,

    //Defines the order in which version control systems should be discovered for VCS-related commands.
    //This is helpful when your project is versioned under multiple VCS setup. Set your primary on the
    //first position so that it will be always used no matter if another one is found.
    "vcs_discovery_order": ["git", "hg", "svn"],


    //GIT SUPPORT (applicable when vcs_support = true)

    //Path to git executable
    //For Windows this could be something like:
    //C:\\PROGRA~1\\Git\\bin\\git.exe or C:\\PROGRA~2\\Git\\bin\\git.exe
    "git_executable_path": "git",

    //Additional arguments for 'git log' command
    "git_log_args": "--encoding=UTF-8 --no-color --no-decorate",

    //Additional arguments for 'git show' command
    "git_show_args": "",

    //Global arguments added for all other `git` commands
    "git_global_args": "-c color.ui=false",

    //Whether to automatically remove *.orig files generated by Git after completed merge
    "git_remove_orig_files_after_merge": false,


    //SVN SUPPORT (applicable when vcs_support = true)

    //Path to svn executable
    "svn_executable_path": "svn",

    //Additional arguments for 'svn log' command
    "svn_log_args": "--stop-on-copy",

    //Additional arguments for 'svn cat' command
    "svn_cat_args": "",

    //Global arguments added for all other `svn` commands
    "svn_global_args": "",


    //MERCURIAL SUPPORT (applicable when vcs_support = true)

    //Path to hg executable
    "hg_executable_path": "hg",

    //Additional arguments for 'hg log' command
    "hg_log_args": "--encoding=UTF-8 --style default",

    //Additional arguments for 'hg cat' command
    "hg_cat_args": "",

    //Global arguments added for all other `hg` commands
    "hg_global_args": "",


    //DIRECTORIES COMPARISON SETTINGS

    //List of directories' names which should be ignored while doing comparison.
    //They will be also ignored while copying. Names are case-sensitive.
    "dir_compare_ignore_dirs": ["RCS", "CVS", "tags", ".git", ".svn", ".hg"],

    //List of files' names which should be ignored while doing comparison.
    //They will be also ignored while copying. You can specify wildcards here, i.e. *.tmp
    //Names are case-sensitive.
    "dir_compare_ignore_files": [".DS_Store", "Thumbs.db"],

    //Normally Sublimerge will copy all changed or added files from source to target directory.
    //When this setting is true, it will also delete all files that exists in target, but not in source.
    //Use with caution.
    "dir_merge_remove_unmatched": false,

    //When set to true, you will be able to navigate through all items in directory.
    //When set to false, you will navigate only through changed items.
    "dir_compare_navigate_all": true,

    //Date format to be used to display file/dir modification date and time. More information about
    //date formatting: http://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior
    "dir_compare_date_format": "%d/%m/%Y %H:%M:%S",


    //SYNTAX SPECIFIC SETTINGS ////////////////////////////////////////////////////////////////////////
    "syntax_specific": {
        "Python": {
            "ignore_whitespace": false,
            "ignore_crlf": false,
            "view": {
                "draw_white_space": "all"
            }
        }
    }
}
